swagger: "2.0"
info:
  version: 1.0.0
  title: MeetupController API
  description: MeetupController RESTful API
basePath: /api
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
  - https
definitions:
  Meetup:
    type: object
    properties:
      id:
        type: string
        format: uuid
      theme:
        type: string
      description:
        type: string
      tags:
        type: array
        items:
          type: string
      date:
        type: string
        format: date-time
      place:
        type: string
    required:
      - name
      - date
  User:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      role:
        type: string

  UserInfo:
    type: object
    properties:
      id:
        type: integer
      accessToken:
        type: string
      refreshToken:
        type: string
  Error:
    type: object
    properties:
      err:
        type: boolean
      result:
        type: string
      status:
        type: integer

paths:
  /meetup:
    get:
      summary: Get all meetups
      description: Get all meetups
      tags: [Meetups]
      produces:
        - application/json
      parameters:
        - in: query
          name: page
          description: Page number to retrieve
          type: string
        - in: query
          name: offset
          description: Number of items to retrieve per page
          type: string
        - in: query
          name: name
          description: Name of the meetup to search for
          type: string
        - in: query
          name: tags
          description: Comma-separated list of tags to filter by
          type: string
      responses:
        "200":
          description: Returns an array of all meetups that match the specified filters
          schema:
            type: array
            items:
              $ref: "#/definitions/Meetup"
    post:
      summary: Create a new meetup
      description: Create a new meetup
      tags: [Meetups]
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Meetup object that needs to be created
          schema:
            $ref: "#/definitions/Meetup"
      responses:
        "201":
          description: Returns the newly created meetup object
          schema:
            $ref: "#/definitions/Meetup"

  /meetups/{id}:
    patch:
      description: Update a single meetup by
      summary: Update a single meetup by
      tags: [Meetups]
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of the meetup to update
          required: true
          type: string
        - in: body
          name: body
          description: Meetup object that needs to be updated
          schema:
            $ref: "#/definitions/Meetup"
      responses:
        "200":
          description: Returns the updated meetup object
          schema:
            $ref: "#/definitions/Meetup"

    delete:
      summary: Delete a meetup by ID
      tags: [Meetups]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the meetup to delete
      responses:
        "200":
          description: Meetup successfully deleted
          schema:
            $ref: "#/definitions/Meetup"

  /user/reg:
    post:
      summary: User registration endpoint
      tags: [UserLogin]
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
              role:
                type: array
                items:
                  type: string
          required:
            - name
            - password
            - role
      responses:
        "200":
          description: User registration successful

  /user/login:
    post:
      summary: User login endpoint
      tags: [UserLogin]
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          schema:
            type: object
            properties:
              name:
                type: string
              password:
                type: string
          required:
            - name
            - password
      responses:
        "200":
          description: User login successful, tokens inside cookie

  /user/refresh:
    post:
      summary: User token refresh endpoint
      tags: [UserLogin]
      responses:
        "200":
          description: Token refresh successful inside Cookie
